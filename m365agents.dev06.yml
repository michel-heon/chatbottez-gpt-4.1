# yaml-language-server: $schema=https://aka.ms/teams-toolkit/v1.8/yaml.schema.json
# Visit https://aka.ms/teamsfx-v5.0-guide for details on this file
# Visit https://aka.ms/teamsfx-actions for details on actions
version: v1.8

environmentFolderPath: ./env

# Triggered when 'teamsapp provision' is executed for dev06
provision:
  # Creates an app
  - uses: teamsApp/create
    with:
      # app name
      name: ChatBottez-GPT41-DEV06${{APP_NAME_SUFFIX}}
    # Write the information of created resources into environment file for
    # the specified environment variable(s).
    writeToEnvironmentFile:
      teamsAppId: TEAMS_APP_ID

  - uses: arm/deploy # Deploy given ARM templates parallelly.
    with:
      subscriptionId: ${{AZURE_SUBSCRIPTION_ID}}
      resourceGroupName: ${{AZURE_RESOURCE_GROUP_NAME}}
      templates:
        - path: ./infra/complete-infrastructure-dev06.bicep
          parameters: ./infra/complete-infrastructure-dev06.parameters.json
          deploymentName: Create-chatbottez-dev06-resources
      bicepCliVersion: v0.9.1

  # Validate using manifest schema
  - uses: teamsApp/validateManifest
    with:
      manifestPath: ./appPackage/manifest.json
      
  # Build app package with latest env value
  - uses: teamsApp/zipAppPackage
    with:
      manifestPath: ./appPackage/manifest.json
      outputZipPath: ./appPackage/build/appPackage.${{TEAMSFX_ENV}}.zip
      outputFolder: ./appPackage/build
      
  # Validate app package using validation rules
  - uses: teamsApp/validateAppPackage
    with:
      appPackagePath: ./appPackage/build/appPackage.${{TEAMSFX_ENV}}.zip
      
  # Apply the app manifest to an existing app in Developer Portal.
  - uses: teamsApp/update
    with:
      appPackagePath: ./appPackage/build/appPackage.${{TEAMSFX_ENV}}.zip

# Triggered when 'teamsapp deploy' is executed for dev06
deploy:
  # Install dependencies
  - uses: cli/runNpmCommand
    name: install dependencies
    with:
      args: install
      
  # Build the application
  - uses: cli/runNpmCommand
    name: build app
    with:
      args: run build --if-present
      
  # Deploy to Azure App Service
  - uses: azureAppService/zipDeploy
    with:
      # Deploy built application
      artifactFolder: .
      # Ignore files
      ignoreFile: .webappignore
      # Resource id of the target Azure App Service
      resourceId: /subscriptions/${{AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{AZURE_RESOURCE_GROUP_NAME}}/providers/Microsoft.Web/sites/${{AZURE_APP_SERVICE_NAME}}
